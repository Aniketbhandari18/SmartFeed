// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  clerkId   String   @unique
  email     String   @unique
  firstName String
  lastName  String
  avatar    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  createdSpaces Space[]
}

model Space {
  id           String   @id @default(cuid())
  createdById  String   // owner of this space
  name         String   
  slug         String   @unique // unique slug for feedback submission url
  title        String   // title or header for your product/service
  description  String   // short para explaining your product/service and what kind of feedback you want 
  externalLink String?  // Link to their product/service page
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  feedbacks Feedback[]

  createdBy User @relation(fields: [createdById], references: [id])

  @@unique([name, createdById])
}

model Feedback {
  id        String    @id @default(uuid())
  spaceId   String
  content   String
  userName  String
  userEmail String
  category  Category
  sentiment Sentiment
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  space Space @relation(fields: [spaceId], references: [id])
}

model Task {
  id          String       @id @default(cuid())
  spaceId     String
  title       String
  description String?
  priority    Priority
  category    TaskCategory
  completed   Boolean
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

enum Category {
  praise
  complaint
  feature_request
  bug_report
  question
  spam
  other
}

enum Sentiment {
  positive
  negative
  neutral
}

enum Priority {
  high
  medium
  low
}

enum TaskCategory {
  bug_fix
  feature
  UI
  performance
  enhancement
  other
}